{"version":3,"sources":["../src/__test__/helper/ClientClass.ts"],"names":[],"mappings":"AAIA,qBAAa,OAAO;IAClB,OAAO,CAAC,IAAI,CAAkB;IAC9B,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAsB;IACxC,QAAQ,EAAC,MAAM,CAAY;gBACtB,eAAe,EAAE,MAAM;IAuBtB,oBAAoB,IAAI,OAAO,CAAC,GAAG,CAAC;CA2BlD","file":"ClientClass.d.ts","sourcesContent":["/* eslint-disable @typescript-eslint/explicit-member-accessibility */\r\n/* eslint-disable @typescript-eslint/no-explicit-any */\r\nimport { DistributedLock } from \"../../zklock\";\r\n\r\nexport class MyClass {\r\n  private lock: DistributedLock;\r\n  private readonly lockPath: string = '/my-lock';\r\n  public response:string =\"initial\";\r\n  constructor(zkConnectString: string) {\r\n    this.lock = new DistributedLock(zkConnectString, this.lockPath);\r\n    this.lock.on('connected', () => {\r\n      console.log('ZooKeeper client connected');\r\n    });\r\n\r\n    this.lock.on('expired', () => {\r\n      console.error('ZooKeeper session expired');\r\n    });\r\n\r\n    this.lock.on('authenticationFailed', () => {\r\n      console.error('ZooKeeper authentication failed');\r\n    });\r\n\r\n    this.lock.on('disconnected', () => {\r\n      console.error('ZooKeeper client disconnected');\r\n    });\r\n\r\n    this.lock.on('error', (error) => {\r\n      console.error('ZooKeeper error:', error);\r\n    });\r\n  }\r\n\r\n  public async acquireLockAndDoWork(): Promise<any> {\r\n    await this.lock.acquireLock( (error) => {\r\n      if (error) {\r\n        console.error('Failed to acquire lock:', error);\r\n        return;\r\n      }\r\n\r\n      console.log('Lock acquired, doing some work...');\r\n      this.response = \"Lock Acquired\";\r\n      // Do some work here...\r\n\r\n      this.lock.releaseLock(this.lockPath, (error) => {\r\n        if (error) {\r\n          console.error('Failed to release lock:', error);\r\n          return 'Failed to release lock:';\r\n        } else {\r\n          console.log('Lock released');\r\n          this.response = \"Lock released\";\r\n\r\n          return 'task done';\r\n        }\r\n      });\r\n      return 'task done';\r\n    });\r\n    return 'task done';\r\n\r\n  }\r\n}\r\n"]}